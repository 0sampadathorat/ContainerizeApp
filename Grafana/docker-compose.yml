# version: "3"
services:
  nginx:
    image: digitalunit4ksb.azurecr.io/nginx:latest
    container_name: grafana-nginx
    depends_on:
      - loki
      - grafana
      - promtail
    ports:
      - "15601:80"
    networks:
      - monitoring
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      #- /etc/ssl/certs:/etc/ssl/certs:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
       limits:
        cpus: "0.5"
        memory: 500M
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.2
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
       limits:
        cpus: "0.5"
        memory: 500M
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
       limits:
        cpus: "0.5"
        memory: 500M
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: grafana-prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - /etc/prometheus/alert_rules.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - '15602:9090'
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped
   
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: grafana-cadvisor
    ports:
      - '15605:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /cgroup/cpu:/cgroup/cpu:ro
      - /cgroup/cpuacct:/cgroup/cpuacct:ro
      - /cgroup/cpuset:/cgroup/cpuset:ro
      - /cgroup/memory:/cgroup/memory:ro
      - /cgroup/blkio:/cgroup/blkio:ro
    networks:
      - monitoring
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: grafana-node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^//emea.*"'
    ports:
      - '15606:9100'
    networks:
      - monitoring
    restart: unless-stopped
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager.yaml:/etc/alertmanager/alertmanager.yaml
    command: --config.file=/etc/alertmanager/alertmanager.yaml
    ports:
      - '15621:9093'
    networks:
    - monitoring

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_PASSWORD=XEKMT6GhEI6L3DBXJIqT
      - GF_SECURITY_ADMIN_USER=digitalunit4ksb
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=mailhog:8025
      - GF_SMTP_FROM_ADDRESS=grafana@local.test
      - GF_SMTP_FROM_NAME=Grafana
    volumes:
      - ./loki.yml:/etc/grafana/provisioning/loki.yml
      - grafana:/var/lib/grafana
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        - name: Prometheus
          type: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus:9090
          isDefault: false
          jsonData:
            timeInterval: "5s"
        EOF
        /run.sh
    image: grafana/grafana:latest
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
       limits:
        cpus: "0.5"
        memory: 500M
    restart: unless-stopped

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    hostname: localhost
    domainname: localhost.com
    ports:
      - '15612:8025'
    volumes:
      - ./hosts.txt:/etc/hosts.txt
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"  
    networks: 
      - monitoring
    restart: unless-stopped 

networks:
  monitoring:
volumes:
  grafana:
